name: 'terraform-apply'

on:
  push:
    branches:
      - master
    paths-ignore:
      - '!stage/_global/**'
      - '!prod/_global/**'
    paths:
      - 'stage/**'
      - 'prod/**'

jobs:
  terraform:
    name: 'terraform-apply'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: list files
        id: getfile
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}/pulls"
          PRNUM=$(curl -s -X GET -H "Accept: application/vnd.github.groot-preview+json" -G $URL | jq -r '.[] | .number')
          echo $PRNUM
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PRNUM}/files"
          FILES=$(curl -s -X GET -H "Accept: application/vnd.github.groot-preview+json" -G $URL | jq -r '.[] | .filename')
          echo "::set-output name=files::$(curl -s -X GET -H "Accept: application/vnd.github.groot-preview+json" -G $URL | jq -r '.[] | .filename' | cut -d '/' -f1,2 | uniq | xargs)"
          echo $FILES

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.29

      - name: Print output
        run: echo ${{ steps.getfile.outputs.files }}

      - name: Print paths
        run: |
          for i in ${{ steps.getfile.outputs.files }}
          do
            echo $i
          done

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          for i in ${{ steps.getfile.outputs.files }}
          do
            terraform init $i
          done

      - name: Terraform validate
        run: |
          for i in ${{ steps.getfile.outputs.files }}
          do
            terraform validate $i
          done

      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          for i in ${{ steps.getfile.outputs.files }}
          do
            terraform plan $i
          done

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          for i in ${{ steps.getfile.outputs.files }}
          do
            terraform apply -auto-approve $i
          done

